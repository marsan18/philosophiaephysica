function [fitresult, gof] = createSurfaceFits(x_coord, y_coord, x_volts, y_volts)
%CREATESURFACEFITS(X_COORD,Y_COORD,X_VOLTS,Y_VOLTS)
%  Fit surfaces to data.
%
%  Data for 'coord_to_xv' fit:
%      X Input : x_coord
%      Y Input : y_coord
%      Z output: x_volts
%      Weights : (none)
%
%  Data for 'cood_to_yv' fit:
%      X Input : x_coord
%      Y Input : y_coord
%      Z output: y_volts
%      Weights : (none)
%
%  Output:
%      fitresult : a cell-array of sfit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, SFIT.

%  Auto-generated by MATLAB on 20-May-2016 16:24:15

%% Initialization.

% Convert all inputs to column vectors.
x_coord = x_coord(:);
y_coord = y_coord(:);
x_volts = x_volts(:);
y_volts = y_volts(:);

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'coord_to_xv'.
ft = fittype( 'poly55' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf];
opts.Upper = [Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf];
opts.Weights = zeros(1,0);
opts.Normalize = 'on';
[fitresult{1}, gof(1)] = fit( [x_coord, y_coord], x_volts, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'coord_to_xv' );

% Plot fit with data.
subplot( 2, 2, 2 );
h = plot( fitresult{1}, [x_coord, y_coord], x_volts );
legend( h, 'coord_to_xv', 'x_volts vs. x_coord, y_coord', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x_coord' );
ylabel( 'y_coord' );
zlabel( 'x_volts' );
grid on
view( 13.5, 6 );

% Plot residuals.
subplot( 2, 2, 4 );
h = plot( fitresult{1}, [x_coord, y_coord], x_volts, 'Style', 'Residual' );
legend( h, 'coord_to_xv - residuals', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x_coord' );
ylabel( 'y_coord' );
zlabel( 'x_volts' );
grid on
view( -4.5, 60 );

% Make contour plot.
subplot( 1, 2, 1 );
h = plot( fitresult{1}, [x_coord, y_coord], x_volts, 'Style', 'Contour' );
legend( h, 'coord_to_xv', 'x_volts vs. x_coord, y_coord', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x_coord' );
ylabel( 'y_coord' );
grid on

%% Fit: 'cood_to_yv'.
ft = fittype( 'poly55' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf];
opts.Upper = [Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf];
opts.Weights = zeros(1,0);
opts.Normalize = 'on';
[fitresult{2}, gof(2)] = fit( [x_coord, y_coord], y_volts, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'cood_to_yv' );

% Plot fit with data.
subplot( 2, 2, 2 );
h = plot( fitresult{2}, [x_coord, y_coord], y_volts );
legend( h, 'cood-to-yv', 'y-volts vs. x-coord, y-coord', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x_{coord}' );
ylabel( 'y_{coord}' );
zlabel( 'y_{volts}' );
grid on
view( 1.5, 28 );

% Plot residuals.
subplot( 2, 2, 4 );
h = plot( fitresult{2}, [x_coord, y_coord], y_volts, 'Style', 'Residual' );
legend( h, 'cood-to-yv - residuals', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x_{coord}' );
ylabel( 'y_{coord}' );
zlabel( 'y_{volts}' );
grid on
view( -24.5, 0 );

% Make contour plot.
subplot( 1, 2, 1 );
h = plot( fitresult{2}, [x_coord, y_coord], y_volts, 'Style', 'Contour' );
legend( h, 'cood_to_yv', 'y_volts vs. x_coord, y_coord', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x_coord' );
ylabel( 'y_coord' );
grid on


