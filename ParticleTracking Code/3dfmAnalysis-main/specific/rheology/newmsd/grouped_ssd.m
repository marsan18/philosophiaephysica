function outs = grouped_ssd(DataIn, group_names)
% Grouped Step-size Distributions
% DataIn = hbe3pct;

if nargin < 2 || isempty(group_names)
    group_names = {'SampleName', 'SampleInstance', 'FovID', 'Tau'};
end


v = DataIn.VidTable(:,{'Fid', 'SampleName', 'SampleInstance', 'FovID', 'Fps', 'Calibum'});
m = DataIn.MsdTable;

b = join(m, v);

% Clear out rows that contain no viable numerical data (empty MSDs, etc)
b(b.N == 0, :) = [];

% b(:,{'Xdiff', 'Ydiff', 'Xodiff', 'Yodiff'}) = b(:,{'Xdiff', 'Ydiff', 'Xodiff', 'Yodiff'}) .* b.Calibum;
% b(:,{'MsdX', 'MsdY'}) = b(:,{'MsdX', 'MsdY'}) .* (b.Calibum .^ 2);

[g, foo] = findgroups(b(:,group_names));

ssdset = splitapply(@(x1)aggregate_stepsize_displacements(x1), b.Xdiff, g); %b.Ydiff b.Xodiff b.Yodiff], ...

% splitapply(@aggregate_stepsize_displacements, b.Xdiff, b.Ydiff, g); 
outs = ssdset;

return

function outs = aggregate_stepsize_displacements(data)

    data = cell2mat(data);

    [counts, edges] = histcounts(data);
    ncounts = counts ./ max(counts(:));
    
    c(1,:) = edges(1:end-1);
    c(2,:) = edges(2:end);
    centers = mean(c,1);
    
    [fitresult, gof] = stepsizeFit(centers, ncounts);
    
    outs{1,1} = [fitresult.a1 fitresult.b1 fitresult.c1];
    outs{1,2} = struct2table(gof);
    
return


function [fitresult, gof] = stepsizeFit(centers, ncounts)
    %CREATEFIT(X2,Y2)
    %  Create a fit.
    %
    %  Data for '3. 2.5M sucrose' fit:
    %      X Input : x2
    %      Y Output: y2
    %  Output:
    %      fitresult : a fit object representing the fit.
    %      gof : structure with goodness-of fit info.
    %
    %  See also FIT, CFIT, SFIT.

    %  Auto-generated by MATLAB on 24-Aug-2018 09:00:49


    % Fit
    [xData, yData] = prepareCurveData( centers, ncounts );

    % Set up fittype and options.
    ft = fittype( 'gauss1' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.Lower = [-Inf -Inf 0];
    opts.StartPoint = [max(ncounts) mean(centers) 0];

    % Fit model to data.
    try
        [fitresult, gof] = fit( xData, yData, ft, opts );
    catch
        fitresult.a1 = NaN;
        fitresult.b1 = NaN;
        fitresult.c1 = NaN;
        
        gof.sse = NaN;
        gof.rsquare = NaN;
        gof.dfe = NaN;
        gof.adjrsquare = NaN;
        gof.rmse = NaN;
    end

return
