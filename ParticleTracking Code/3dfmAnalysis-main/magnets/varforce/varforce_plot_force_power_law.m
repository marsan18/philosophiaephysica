function varforce_plot_force_power_law(data, results)
% VARFORCE_PLOT_FORCE_POWER_LAW log(distance) vs log(force) and includes power law fit
%
% 3DFM function  
% Magnetics/varforce
% last modified 11/18/08 (krisford)
%  
% plots log(distance) vs log(force) and includes power law fit. These plots 
% display the raw data with the fit to give an idea of the data's 
% reliability, adding confidence to the saturation plots generated by 
% varforce_plot_sat_data.m. 
%
%   varforce_plot_force_power_law(data, results);
%
% where data is the 'data' substructure of the varforce output structure
%       results is the 'results' substructure of the varforce output structure
%


    % extract and rename vectors from input matrix
    voltages    = results.volts;
    slopes      = results.fit(:,1);
    inter       = results.fit(:,2);

    table_volts = data.volts;
    
    r  = magnitude(data.xy);
    F  = magnitude(data.Fxy);
    E  = magnitude(data.Fxyerr);
    
    logpos      = log10(r);
    logforce    = log10(F);   
    logerr      = log10(F+E) - log10(F);
    
    for k = 1 : length(voltages)

        % sorts force and distance vectors according to pulse voltage
        idx = find(table_volts == voltages(k));  
        
        % in case there is no data for a voltage entry, check for the
        % existence of point inside idx.  This prevents the appearance of
        % extraneous plots that contain no data.
        if ~isempty(idx)
            
            this_r = logpos(idx); 
            this_force = logforce(idx); 
            fit_force = polyval([slopes(k) inter(k)], this_r); 
            err_force = logerr(idx);

%             % plots log(distance) vs. log(force) for each voltage series
%             figure(k)
%             plot(this_r , this_force, 'b.', this_r, fit_force, 'r-');
%             xlabel('log_{10}(distance) [m]');
%             ylabel('log_{10}(force) [N]');
%             title(voltages(k));
%             drawnow;
            
            % plots log(distance) vs. log(force) for each voltage series
            figure(k)
            errorbar(this_r, this_force, err_force, 'b.');
            hold on;
                plot(this_r, fit_force, 'r-');
            hold off;
            xlabel('log_{10}(distance) [m]');
            ylabel('log_{10}(force) [N]');
            title(voltages(k));
            drawnow;
        end

    end

return
